C51 COMPILER V9.60.0.0   TRAINING                                                          10/06/2021 20:39:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TRAINING
OBJECT MODULE PLACED IN .\Objects\training.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE training.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -training.lst) TABS(2) OBJECT(.\Objects\training.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #include"training_main.h"
   4          
   5          /*单片机初始化*/
   6          void init_51c()
   7          {
   8   1        EA=1;                   //中断允许总 开
   9   1        ES=1;                   //串行中断允许 开
  10   1        EX0=1;                  //外部中断0允许
  11   1        TMOD=0x20;              //设定 定时器1 的工作方式 1
  12   1        SM0=0;
  13   1        SM1=1;                  //串行口工作方式 1
  14   1      //  REN=1;                  //允许串行口接收数据
  15   1        TH1=0xfd;
  16   1        TL1=0xfd;               //设定初值，波特率为 9600 bps
  17   1        TR1=1;                  //启动定时器
  18   1        seg_ch=0;               //数码管片选端选择开
  19   1        seg=seg_tab[key];       //数码管显示初始化
  20   1        IT0=0;                  //外部中断0低电平触发
  21   1        P0=0xf0;                //矩阵键盘低四位送低电平
  22   1      }
  23          
  24          /*主函数入口*/
  25          void main()
  26          {
  27   1        init_51c();
  28   1        while(1)
  29   1        {
  30   2          seg=seg_tab[key];            //数码管显示键值
  31   2          ES=0;
  32   2          SBUF=key;                    //发送键值
  33   2          while(!TI);                  //等待发送完成
  34   2          TI=0;
  35   2          ES=1;
  36   2        }
  37   1      }
  38          
  39          /* INT0 中断 */
  40          void m_kb() interrupt 0
  41          {
  42   1        uchar ret;
  43   1        delay(8);
  44   1        if(P0!=0xf0)
  45   1        {
  46   2          P0=0xfe;                      // 1
  47   2          ret=P0&0xf0;
  48   2          if(ret!=0xf0)
  49   2          {
  50   3            switch(ret)
  51   3            {
  52   4              case 0xe0:key=0;break;
  53   4              case 0xd0:key=1;break;
  54   4              case 0xb0:key=2;break;
C51 COMPILER V9.60.0.0   TRAINING                                                          10/06/2021 20:39:35 PAGE 2   

  55   4              case 0x70:key=3;break;
  56   4              default:key=16;
  57   4            }
  58   3            while(ret!=0xf0)               //等待按键释放
  59   3            {
  60   4              P0=0xfe;
  61   4              ret=P0&0xf0;
  62   4            }
  63   3          }
  64   2          P0=0xfd;                      // 2
  65   2          ret=P0&0xf0;
  66   2          if(ret!=0xf0)
  67   2          {
  68   3            switch(ret)
  69   3            {
  70   4              case 0xe0:key=4;break;
  71   4              case 0xd0:key=5;break;
  72   4              case 0xb0:key=6;break;
  73   4              case 0x70:key=7;break;
  74   4              default:key=16;
  75   4            }
  76   3            while(ret!=0xf0)               //等待按键释放
  77   3            {
  78   4              P0=0xfd;
  79   4              ret=P0&0xf0;
  80   4            }
  81   3          }
  82   2          P0=0xfb;                      // 3
  83   2          ret=P0&0xf0;
  84   2          if(ret!=0xf0)
  85   2          {
  86   3            switch(ret)
  87   3            {
  88   4              case 0xe0:key=8;break;
  89   4              case 0xd0:key=9;break;
  90   4              case 0xb0:key=10;break;
  91   4              case 0x70:key=11;break;
  92   4              default:key=16;
  93   4            }
  94   3            while(ret!=0xf0)               //等待按键释放
  95   3            {
  96   4              P0=0xfb;
  97   4              ret=P0&0xf0;
  98   4            }
  99   3          }
 100   2          P0=0xf7;                      // 4
 101   2          ret=P0&0xf0;
 102   2          if(ret!=0xf0)
 103   2          {
 104   3            switch(ret)
 105   3            {
 106   4              case 0xe0:key=12;break;
 107   4              case 0xd0:key=13;break;
 108   4              case 0xb0:key=14;break;
 109   4              case 0x70:key=15;break;
 110   4              default:key=16;
 111   4            }
 112   3            while(ret!=0xf0)               //等待按键释放
 113   3            {
 114   4              P0=0xf7;
 115   4              ret=P0&0xf0;
 116   4            }
C51 COMPILER V9.60.0.0   TRAINING                                                          10/06/2021 20:39:35 PAGE 3   

 117   3          }   
 118   2        }
 119   1        P0=0xf0;
 120   1      }
 121          
 122          /* ms延时函数 */
 123          void delay(uint x_ms)
 124          {
 125   1        for(i=x_ms;i>0;i--)
 126   1          for(j=113;j>0;j--);
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    452    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
