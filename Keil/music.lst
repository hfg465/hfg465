C51 COMPILER V9.00   MUSIC                                                                 03/24/2019 20:00:01 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MUSIC
OBJECT MODULE PLACED IN .\music.obj
COMPILER INVOKED BY: C:\Keil00\C51\BIN\C51.EXE C:\BaiduNet压缩包\单片机\music.c BROWSE DEBUG OBJECTEXTEND PRINT(.\music.
                    -lst) OBJECT(.\music.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #define  FREQ 11059200
   4          //#define  FREQ 12000000
   5          #define  NEW_BORD
   6          
   7          //  音乐_编码2 -- 存储器定义  //
   8          unsigned char code music_tab1[]={    //音符码格式:| D7 |D6  D5  D4| D3 |D2  D1  D0|
   9                                               //梁祝       |变调|      节拍|升降|     音符 |
  10              0xcb,                            //示例:0xcb=11001011B,即升调,4/16拍,3Mi低音
  11              0x35,0x16,0xb9,0x12,0x96,0x99,0xa5,
  12              0xbd,0x99,0x96,0x15,0x13,0x15,0x62,
  13              0x32,0x13,0xa7,0x26,0x25,0x16,0xa9,0x22,
  14              0xa3,0xa9,0x96,0x15,0x16,0x99,0xe5,
  15              0xbb,0x15,0xa7,0xaa,0x96,0x99,0xd5,
  16              0x13,0x15,0x23,0x15,0x16,0x17,0x9a,0xd6,0x15,0x16,
  17              0xb9,0x12,0x25,0x23,0x23,0x22,0x13,0x12,0x21,0x96,0x15,
  18              0x43,0xc9,0x96,0x99,0x96,0x15,0x13,0x15,0x16,0x99,
  19              0xd5,                            //功能码格式:| D7  D6  D5  D4  | D3  D2  D1  D0|
  20                                               //           |高4位=0时是功能码|根据低4位散转  |
  21              0x00,                            //最后字节为功能码必须==0x00退出
  22          };
  23          unsigned char code music_tab2[]={    //康定情歌
  24              0x23,0x25,0x26,0x16,0x15,0x36,0x13,0x42,
  25              0x23,0x25,0x26,0x16,0x15,0x26,0x53,
  26              0x23,0x25,0x26,0x16,0x15,0x26,0x23,0x42,
  27              0x25,0x23,0x12,0x13,0x12,0x11,0x22,0xd6,
  28              0x26,0xda,0x25,0x53,0x12,0x11,0xd6,
  29              0xad,0x23,0x12,0x13,0x12,0x11,0x22,0xd6,
  30              0x00,
  31          };
  32          unsigned char code music_tab3[]={    //美酒加咖啡
  33              0x55,0x23,0x25,0x26,0xa9,0x22,0x73,
  34              0x45,0x25,0x26,0x23,0x22,0x21,0x23,0x72,
  35              0x52,0x23,0x45,0x43,0x22,0x21,0xa6,0x25,0x66,
  36              0xc9,0xa6,0x25,0x23,0x25,0x26,0xa9,0xf5,
  37              0x45,0x23,0x25,0x46,0xc9,0x22,0x13,0x12,0x21,0x22,0x63,
  38              0x22,0x23,0x25,0x26,0x25,0x23,0x22,0x21,0x72,
  39              0x52,0x23,0x45,0x43,0x22,0x21,0xa6,0x25,0x66,
  40              0xb9,0x12,0x23,0x25,0x22,0xa5,0xab,0x22,0x71,
  41              0x00,
  42          };
  43          unsigned char code music_tab4[]={    //北国之春
  44              0x15,0x16,0x75,0x15,0x16,0x55,0x13,0x15,0x16,0x15,0x16,0x99,0x12,0x13,
  45              0x65,0x45,0x13,0x12,0x11,0x12,0x73,
  46              0x62,0x42,0x12,0x11,0x96,0x15,0x76,
  47              0x55,0x23,0x45,0xa9,0x22,0x53,0x12,0x13,0x65,
  48              0x52,0x22,0x42,0x21,0xa6,0xe9,0x91,0x12,0x13,0x12,0x13,0x15,0x99,0x12,
  49              //以上为过门
  50              0x20,0x23,0x23,0x23,0x63,0x22,0x23,0x23,0x22,0x41,0xa6,0x25,
  51              0x53,0x22,0x21,0xa9,0x21,0xa6,0x75,
  52              0x26,0xa9,0x21,0xa6,0xc9,0x12,0x11,0x96,0x15,
  53              0x23,0x25,0x25,0x26,0x45,0x21,0x22,
  54              0x13,0x35,0x25,0xa9,0xa6,0x25,0x23,0x22,0x71,
C51 COMPILER V9.00   MUSIC                                                                 03/24/2019 20:00:01 PAGE 2   

  55              0x52,0x25,0x45,0x13,0x15,0x13,0x12,0x21,0x41,0x22,0x43,0x45,
  56              0x23,0x25,0x26,0xa9,0x42,0x12,0x33,0x72,
  57              0x51,0x22,0x43,0x22,0x21,0xc6,0xc9,0x29,0xc6,0x45,0x23,0x23,
  58              0x53,0x25,0x26,0x25,0x13,0x12,0x21,0x62,0x42,0x23,0x25,
  59              0x55,0x26,0x25,0x23,0x45,0x26,0xa9,0x21,0x22,0x63,
  60              0x52,0x22,0x22,0x13,0x12,0x21,0xa6,0xf9,
  61              0x00,
  62          };
  63          
  64          unsigned char code music_l_tab[8]={0,1,2,3,4,6,8,16};//节拍延时单位
  65          unsigned char code music_freq_tab[64]={             //音符定时器值表
  66              0xff,0xea,                                      //0 休止符
  67              255-FREQ/24/131/256,     //256-FREQ/24/x/256    //1 do 高字节
  68              256-FREQ/24/131%256,     //256-FREQ/24/x%256    //1 do 低字节
  69              255-FREQ/24/147/256,256-FREQ/24/147%256,        //2 re
  70              255-FREQ/24/165/256,256-FREQ/24/165%256,        //3 mi
  71              255-FREQ/24/175/256,256-FREQ/24/175%256,        //4 fa
  72              255-FREQ/24/196/256,256-FREQ/24/196%256,        //5 suo
  73              255-FREQ/24/221/256,256-FREQ/24/221%256,        //6 la
  74              255-FREQ/24/248/256,256-FREQ/24/248%256,        //7 xi
  75          
  76              0xff,0xea,                                      //0 休止符
  77              255-FREQ/24/262/256,256-FREQ/24/262%256,        //1 do
  78              255-FREQ/24/294/256,256-FREQ/24/294%256,        //2 re
  79              255-FREQ/24/330/256,256-FREQ/24/330%256,        //3 mi
  80              255-FREQ/24/350/256,256-FREQ/24/350%256,        //4 fa
  81              255-FREQ/24/393/256,256-FREQ/24/393%256,        //5 suo
  82              255-FREQ/24/441/256,256-FREQ/24/441%256,        //6 la
  83              255-FREQ/24/495/256,256-FREQ/24/495%256,        //7 xi
  84          
  85              0xff,0xea,                                      //0 休止符
  86              255-FREQ/24/525/256,256-FREQ/24/525%256,        //1 do
  87              255-FREQ/24/589/256,256-FREQ/24/589%256,        //2 re
  88              255-FREQ/24/661/256,256-FREQ/24/661%256,        //3 mi
  89              255-FREQ/24/700/256,256-FREQ/24/700%256,        //4 fa
  90              255-FREQ/24/786/256,256-FREQ/24/786%256,        //5 suo
  91              255-FREQ/24/882/256,256-FREQ/24/882%256,        //6 la
  92              255-FREQ/24/990/256,256-FREQ/24/990%256,        //7 xi
  93          
  94              0xff,0xea,                                      //0 休止符
  95              255-FREQ/24/1049/256,256-FREQ/24/1049%256,      //1 do
  96              255-FREQ/24/1178/256,256-FREQ/24/1178%256,      //2 re
  97              255-FREQ/24/1322/256,256-FREQ/24/1322%256,      //3 mi
  98              255-FREQ/24/1400/256,256-FREQ/24/1400%256,      //4 fa
  99              255-FREQ/24/1572/256,256-FREQ/24/1572%256,      //5 suo
 100              255-FREQ/24/1665/256,256-FREQ/24/1665%256,      //6 la
 101              255-FREQ/24/1869/256,256-FREQ/24/1869%256,      //7 xi
 102          
 103          };
 104          
 105          unsigned char code music_frequp_tab[64]={           //升半音
 106              0xff,0xea,                                      //0 休止符
 107              255-FREQ/24/139/256,        //1 do 高字节 //255-FREQ/24/x/256
 108              256-FREQ/24/139%256,        //1 do 低字节 //256-FREQ/24/x%256
 109              255-FREQ/24/156/256,256-FREQ/24/156%256,        //2 re
 110              255-FREQ/24/175/256,256-FREQ/24/175%256,        //3 mi
 111              255-FREQ/24/185/256,256-FREQ/24/185%256,        //4 fa
 112              255-FREQ/24/208/256,256-FREQ/24/208%256,        //5 suo
 113              255-FREQ/24/234/256,256-FREQ/24/234%256,        //6 la
 114              255-FREQ/24/262/256,256-FREQ/24/262%256,        //7 xi
 115          
 116              0xff,0xea,                                      //0 休止符
C51 COMPILER V9.00   MUSIC                                                                 03/24/2019 20:00:01 PAGE 3   

 117              255-FREQ/24/278/256,256-FREQ/24/278%256,        //1 do
 118              255-FREQ/24/312/256,256-FREQ/24/312%256,        //2 re
 119              255-FREQ/24/350/256,256-FREQ/24/350%256,        //3 mi
 120              255-FREQ/24/371/256,256-FREQ/24/371%256,        //4 fa
 121              255-FREQ/24/416/256,256-FREQ/24/416%256,        //5 suo
 122              255-FREQ/24/467/256,256-FREQ/24/467%256,        //6 la
 123              255-FREQ/24/525/256,256-FREQ/24/525%256,        //7 xi
 124          
 125              0xff,0xea,                                      //0 休止符
 126              255-FREQ/24/556/256,256-FREQ/24/556%256,        //1 do
 127              255-FREQ/24/624/256,256-FREQ/24/624%256,        //2 re
 128              255-FREQ/24/700/256,256-FREQ/24/700%256,        //3 mi
 129              255-FREQ/24/742/256,256-FREQ/24/742%256,        //4 fa
 130              255-FREQ/24/833/256,256-FREQ/24/833%256,        //5 suo
 131              255-FREQ/24/935/256,256-FREQ/24/935%256,        //6 la
 132              255-FREQ/24/1049/256,256-FREQ/24/1049%256,      //7 xi
 133          
 134              0xff,0xea,                                      //0 休止符
 135              255-FREQ/24/1112/256,256-FREQ/24/1112%256,      //1 do
 136              255-FREQ/24/1248/256,256-FREQ/24/1248%256,      //2 re
 137              255-FREQ/24/1400/256,256-FREQ/24/1400%256,      //3 mi
 138              255-FREQ/24/1484/256,256-FREQ/24/1484%256,      //4 fa
 139              255-FREQ/24/1618/256,256-FREQ/24/1618%256,      //5 suo
 140              255-FREQ/24/1764/256,256-FREQ/24/1764%256,      //6 la
 141              255-FREQ/24/1968/256,256-FREQ/24/1968%256,      //7 xi
 142          };
 143          unsigned char temp_TH1;
 144          unsigned char temp_TL1;
 145          
 146          //  音乐_编码2 -- IO定义  //
 147          #ifdef NEW_BORD
 148          sbit PIN_MSC=P1^0;                   //  音乐输出端口  //
 149          sbit LED0 = P0^0;                   //  LED0端口  //
 150          sbit LED1 = P0^1;                   //  LED1端口  //
 151          #else
              sbit PIN_MSC=P1^6;                  //  音乐输出端口  //
              sbit LED0 = P1^0;                   //  LED0端口  //
              sbit LED1 = P1^1;                   //  LED1端口  //
              #endif
 156          
 157          //  音乐_编码2 -- 函数原型//
 158          void music_delay(unsigned char x);   //音乐节拍延时
 159          void music_play(unsigned char code *msc); //播放音乐子程序
 160          
 161          //  音乐_编码2 -- 函数    //
 162          //---------------------------------------------------------------------------//
 163          void music_int_t1 (void) interrupt 3 using 1    //定时中断1//
 164              {
 165   1          TH1 = temp_TH1;
 166   1          TL1 = temp_TL1;
 167   1          PIN_MSC = ~PIN_MSC;
 168   1      }
 169          
 170          //---------------------------------------------------------------------------//
 171          void music_delay(unsigned char n)     //延时 125*n 毫秒
 172              {
 173   1          unsigned char i=125,j;
 174   1              //采用12C5A60S2时，延时要变。
 175   1              n *= 8;
 176   1          do {
 177   2              do {
 178   3                  //for (j=0; j<230; j++) _nop_(); //j=(11159KHz/12-10)/4
C51 COMPILER V9.00   MUSIC                                                                 03/24/2019 20:00:01 PAGE 4   

 179   3                              //j = 130;
 180   3                              j = 30;
 181   3                  do{_nop_();}while(--j); //j=(11159KHz/12-10)/4
 182   3              }while(--i);
 183   2          }while(--n);
 184   1      }
 185          
 186          //---------------------------------------------------------------------------//
 187          void music_play(unsigned char code *msc)   //音乐
 188              {
 189   1          unsigned char music_freq=32;      //音高 
 190   1          unsigned char music_long;         //节拍
 191   1          unsigned char music_data=0;       //音符数据
 192   1          unsigned char p2_i=0x80;       //音符数据
 193   1              //bit                   p20_save;
 194   1      
 195   1          bit music_up=0;                   //升半音
 196   1          bit music_break=0;                //断奏
 197   1          temp_TH1=0xff;
 198   1          temp_TL1=0xea;                    //关输出(输出超声波)
 199   1          TMOD=0x11;                        //T0：16位定时器、T1：16位定时器
 200   1      //  ET0=0;                          //关T0定时器中断
 201   1          ET1=1;                            //开T1定时器中断
 202   1              TR1 = 1;                                                //启动定时器1
 203   1      //---------------------------------------------------------
 204   1          while (*msc != 0x00)
 205   1              {
 206   2              music_data=*msc & 0x07;
 207   2              music_long=*msc>>4;
 208   2              //---------------------------------------------------------
 209   2              if (music_long != 0)          //是音符
 210   2                  {
 211   3                  if (*msc >=128)           //需升降调
 212   3                      {
 213   4                      if (((*msc) & 0x08) == 0)
 214   4                          {if (music_freq >= 16) music_freq -= 16;}    //音高下降 
 215   4                      else
 216   4                          {if (music_freq <  48) music_freq += 16;}    //音高上升
 217   4                                      //LED1 = ~LED1;
 218   4                   }
 219   3                  //---------------------------------------------------------
 220   3                  if (music_up==1)          //升半音
 221   3                      {
 222   4                                      ET1 = 0;
 223   4                      temp_TH1=music_frequp_tab[(music_freq  + (music_data <<1))];
 224   4                      temp_TL1=music_frequp_tab[(music_freq + (music_data <<1)+1)];
 225   4                                      ET1 = 1;
 226   4                  }
 227   3                  else                      //不升半音
 228   3                      {
 229   4                                      ET1 = 0;
 230   4                      temp_TH1=music_freq_tab[(music_freq + (music_data <<1))];
 231   4                      temp_TL1=music_freq_tab[(music_freq + (music_data <<1)+ 1)];
 232   4                                      ET1 = 1;
 233   4                  }
 234   3                  //---------------------------------------------------------
 235   3                  if (music_break)          //断奏
 236   3                      {
 237   4                                      ET1 = 0;
 238   4                                      PIN_MSC = 1;
 239   4                      music_delay(music_l_tab[music_long&0x07]-1);
 240   4                      temp_TH1=0xff;
C51 COMPILER V9.00   MUSIC                                                                 03/24/2019 20:00:01 PAGE 5   

 241   4                      temp_TL1=0xea;
 242   4                      music_delay(1);
 243   4                                      ET1 = 1;
 244   4                  }
 245   3                  else                      //连奏
 246   3                              {
 247   4                      music_delay(music_l_tab[music_long&0x07]);
 248   4                                      //LED0 = ~LED0;
 249   4                              }
 250   3              }
 251   2              //---------------------------------------------------------
 252   2              else                          //是功能码
 253   2                  {
 254   3                  switch(music_data)
 255   3                      {
 256   4                      case 0x04:
 257   4                          music_up=0;       //不升半音
 258   4                          break;
 259   4                      case 0x05:
 260   4                          music_up=1;       //升半音
 261   4                          break;
 262   4                      case 0x06:
 263   4                          music_break=0;    //断奏
 264   4                          break;
 265   4                      case 0x07:
 266   4                          music_break=1;    //连奏
 267   4                          break;
 268   4                      default:
 269   4                          break;
 270   4                  }
 271   3              }
 272   2              //---------------------------------------------------------
 273   2              msc++;
 274   2                      P0--; 
 275   2          }
 276   1          ET1=0;                           //播放结束,关T1中断
 277   1              TR1 = 0;
 278   1          PIN_MSC=1;                       //关输出
 279   1              P0 = 0xFF;
 280   1              //p2_p = 1;
 281   1      //    temp_TH1=0xff;
 282   1      //    temp_TL1=0xea;                 //关输出(输出超声波)
 283   1      //    ET0=1;                         //开T0定时器中断
 284   1      //    TMOD=0x51;                     //T0：16位定时器、T1：16位计数器
 285   1      }
 286          
 287          //---------------------------------------------------------------------------//
 288          void main(void)                      //示例
 289          {
 290   1      //    设置定时器--------------------------------------
 291   1             TMOD   =  0x11;         // TMOD: 定时器1:模式1:16位;定时器2:模式1:16位   //
 292   1             TCON   =  0x50;       // TCON: 定时器 1运行;      定时器 2运行         //
 293   1          //    设置并开启中断: 
 294   1              IP  = 0x08;             //中断优先寄存器IP:|D7_x |x|x|PS|PT1|PX1|PT0|D0_PX0|//
 295   1              IE  = 0x88;             //中断允许寄存器IE:|D7_EA|x|ET2|ES|ET1|EX1|ET0|D0_EX0|//
 296   1         for (;;) {
 297   2            //在此调用键盘和显示函数//
 298   2            music_play(music_tab1);
 299   2            music_play(music_tab2);
 300   2            music_play(music_tab3);
 301   2            music_play(music_tab4);
 302   2         }
C51 COMPILER V9.00   MUSIC                                                                 03/24/2019 20:00:01 PAGE 6   

 303   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    282    ----
   CONSTANT SIZE    =    481    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
