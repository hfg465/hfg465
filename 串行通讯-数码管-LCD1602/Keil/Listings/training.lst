C51 COMPILER V9.60.0.0   TRAINING                                                          10/21/2021 22:50:15 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TRAINING
OBJECT MODULE PLACED IN .\Objects\training.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE training.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -training.lst) TABS(2) OBJECT(.\Objects\training.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #include"training_main.h"
   4          #include"lcd_1602.h"
   5          
   6          /*单片机初始化*/
   7          void init_51c()
   8          {
   9   1        EA=1;                   //中断允许总 开
  10   1        ES=1;                   //串行中断允许 开
  11   1        EX0=1;                  //外部中断0允许
  12   1        TMOD=0x20;              //设定 定时器1 的工作方式 1
  13   1        SM0=0;
  14   1        SM1=1;                  //串行口工作方式 1
  15   1        REN=1;                  //允许串行口接收数据
  16   1        TH1=0xfd;
  17   1        TL1=0xfd;               //设定初值，波特率为 9600 bps
  18   1        TR1=1;                  //启动定时器
  19   1        seg_ch=0;               //数码管片选端选择开
  20   1        seg=seg_tab[key];       //数码管显示初始化
  21   1        IT0=0;                  //外部中断0低电平触发
  22   1        P0=0xf0;                //矩阵键盘低四位送低电平
  23   1      }
  24          
  25          /*主函数入口*/
  26          void main()
  27          {
  28   1        uchar m;                        //用于给LCD1602发送数据计数
  29   1        uchar key0=0;      //用于判断键值是否更新，若发生更新再发送新的键值，若没有更新则不发送
  30   1        init_51c();
  31   1        lcd_init();
  32   1        while(1)
  33   1        {
  34   2          seg=seg_tab[key];            //数码管显示键值
  35   2          if(key0!=key)
  36   2          {
  37   3            ES=0;
  38   3            SBUF=key;                    //发送键值
  39   3            while(!TI);                  //等待发送完成
  40   3            TI=0;
  41   3            ES=1;
  42   3            key0=key;
  43   3          }
  44   2          if(flag==1)
  45   2          {
  46   3            ES=0;
  47   3            wr_data(aa);
  48   3            if(aa=='.')
  49   3            {
  50   4              wr_cmd(0x80|0x40);          //第二行地址指针设置
  51   4              for(m=0;m<5;m++)
  52   4              {
  53   5                wr_data(pipi[m]);delay(3);
  54   5              }
C51 COMPILER V9.60.0.0   TRAINING                                                          10/21/2021 22:50:15 PAGE 2   

  55   4              wr_cmd(0x02);               //LCD指针数据清零
  56   4            }
  57   3            flag=0;
  58   3            ES=1;
  59   3          }
  60   2        }
  61   1      }
  62          
  63          /* INT0 中断 */
  64          void m_kb() interrupt 0
  65          {
  66   1        uchar ret;
  67   1        delay(8);
  68   1        if(P0!=0xf0)
  69   1        {
  70   2          P0=0xfe;                      // 1
  71   2          ret=P0&0xf0;
  72   2          if(ret!=0xf0)
  73   2          {
  74   3            switch(ret)
  75   3            {
  76   4              case 0xe0:key=0;break;
  77   4              case 0xd0:key=1;break;
  78   4              case 0xb0:key=2;break;
  79   4              case 0x70:key=3;break;
  80   4              default:key=16;
  81   4            }
  82   3            while(ret!=0xf0)               //等待按键释放
  83   3            {
  84   4              P0=0xfe;
  85   4              ret=P0&0xf0;
  86   4            }
  87   3          }
  88   2          P0=0xfd;                      // 2
  89   2          ret=P0&0xf0;
  90   2          if(ret!=0xf0)
  91   2          {
  92   3            switch(ret)
  93   3            {
  94   4              case 0xe0:key=4;break;
  95   4              case 0xd0:key=5;break;
  96   4              case 0xb0:key=6;break;
  97   4              case 0x70:key=7;break;
  98   4              default:key=16;
  99   4            }
 100   3            while(ret!=0xf0)               //等待按键释放
 101   3            {
 102   4              P0=0xfd;
 103   4              ret=P0&0xf0;
 104   4            }
 105   3          }
 106   2          P0=0xfb;                      // 3
 107   2          ret=P0&0xf0;
 108   2          if(ret!=0xf0)
 109   2          {
 110   3            switch(ret)
 111   3            {
 112   4              case 0xe0:key=8;break;
 113   4              case 0xd0:key=9;break;
 114   4              case 0xb0:key=10;break;
 115   4              case 0x70:key=11;break;
 116   4              default:key=16;
C51 COMPILER V9.60.0.0   TRAINING                                                          10/21/2021 22:50:15 PAGE 3   

 117   4            }
 118   3            while(ret!=0xf0)               //等待按键释放
 119   3            {
 120   4              P0=0xfb;
 121   4              ret=P0&0xf0;
 122   4            }
 123   3          }
 124   2          P0=0xf7;                      // 4
 125   2          ret=P0&0xf0;
 126   2          if(ret!=0xf0)
 127   2          {
 128   3            switch(ret)
 129   3            {
 130   4              case 0xe0:key=12;break;
 131   4              case 0xd0:key=13;break;
 132   4              case 0xb0:key=14;break;
 133   4              case 0x70:key=15;break;
 134   4              default:key=16;
 135   4            }
 136   3            while(ret!=0xf0)               //等待按键释放
 137   3            {
 138   4              P0=0xf7;
 139   4              ret=P0&0xf0;
 140   4            }
 141   3          }   
 142   2        }
 143   1        P0=0xf0;
 144   1      }
 145          
 146          /*串行口接收中断*/
 147          void rec() interrupt 4
 148          {
 149   1        RI=0;
 150   1        aa=SBUF;
 151   1        flag=1;
 152   1      }
 153          
 154          /* ms延时函数 */
 155          /*
 156          void delay(uint x_ms)
 157          {
 158            for(i=x_ms;i>0;i--)
 159              for(j=113;j>0;j--);
 160          }
 161          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    496    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
