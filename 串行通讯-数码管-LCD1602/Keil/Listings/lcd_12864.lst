C51 COMPILER V9.60.0.0   LCD_12864                                                         10/20/2021 22:18:10 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD_12864
OBJECT MODULE PLACED IN .\Objects\lcd_12864.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd_12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\lcd_12864.lst) TABS(2) OBJECT(.\Objects\lcd_12864.obj)

line level    source

   1          #include<reg52.h>
   2          #include"lcd_1602.h"
   3          
   4          /*
   5          unsigned char code zimu[6][32]={{
   6          /*--  文字:  你  --*/
   7          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --/
   8          0x00,0x01,0x06,0x1F,0xE0,0x02,0x04,0x18,0xF0,0x10,0x13,0x10,0x10,0x14,0x18,0x00,
   9          0x80,0x00,0x00,0xFF,0x00,0x08,0x30,0xC0,0x02,0x01,0xFE,0x00,0x80,0x60,0x18,0x00},
  10          
  11          /*--  文字:  好  --*/
  12          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --/
  13          {0x08,0x08,0x0F,0xF8,0x08,0x0F,0x00,0x01,0x41,0x41,0x47,0x49,0x51,0x61,0x01,0x00,
  14          0x02,0x44,0xA8,0x10,0x68,0x86,0x00,0x00,0x02,0x01,0xFE,0x00,0x00,0x00,0x00,0x00},
  15          
  16          /*--  文字:  ，  --*/
  17          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --/
  18          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  19          0x00,0x00,0x1A,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
  20          
  21          /*--  文字:  世  --*/
  22          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --/
  23          {0x04,0x04,0x04,0x7F,0x04,0x04,0xFF,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x00,
  24          0x00,0x00,0x00,0xFE,0x02,0x02,0xE2,0x22,0x22,0x22,0xE2,0x02,0x02,0x02,0x00,0x00},
  25          
  26          /*--  文字:  界  --*/
  27          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --/
  28          {0x00,0x00,0x00,0x7F,0x49,0x49,0x49,0x7F,0x49,0x49,0x49,0x7F,0x00,0x00,0x00,0x00,
  29          0x10,0x10,0x20,0x21,0x46,0x78,0x80,0x00,0x80,0x7F,0x40,0x20,0x20,0x10,0x10,0x00},
  30          
  31          /*--  文字:  ！  --*/
  32          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --/
  33          {0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  34          0x00,0x00,0x00,0xCC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  35          }};
  36          */
  37          
  38          
  39          /*void lcd_1602()
  40          {
  41          //  lcd_init();
  42              wr_cmd(0x80);               //第一行地址指针设置
  43              for(num=0;num<16;num++)
  44              {
  45                wr_data(tab1[num]);        //第一行显示16个字符
  46                delay(500);
  47              }
  48              wr_cmd(0x80+0x40);          //第二行地址指针设置
  49              for(num=0;num<16;num++)
  50              {
  51                wr_data(tab2[num]);        //第二行显示字符
  52                delay(500); 
  53              }
  54              wr_cmd(0x80|0x10);            //提前将指针与光标移到 0x80+0x10
C51 COMPILER V9.60.0.0   LCD_12864                                                         10/20/2021 22:18:10 PAGE 2   

  55              for(num=0;num<7;num++)        // 整屏左移 7 个字符
  56              {
  57                wr_cmd(0x18);
  58                delay(200);
  59              }
  60              wr_cmd(0x80+0x10);                //设置第一行显示地址
  61              for(num=16;num<25;num++)          // 第一行显示后面的数据
  62              {
  63                wr_data(tab1[num]);         
  64                delay(500);
  65              }
  66              delay(1000);                //延时大约 1s 后重新开始显示
  67              wr_cmd(0x0c);               //取消光标
  68              wr_cmd(0x02);               //指针数据清0
  69              delay(2000);                //延时大约 2s 
  70              for(num=0;num<9;num++)
  71              {
  72                wr_cmd(0x18);               //整屏左移
  73                delay(500);
  74              }                             //右移了以后再左移回来
  75              for(num=0;num<9;num++)
  76              {
  77                wr_cmd(0x1c);               //整屏右移
  78                delay(500);
  79              }
  80              delay(1000);                //延时大约 1s 后重新开始
  81              wr_cmd(0x0f);               //显示光标并闪烁
  82              wr_cmd(0x01);               //显示清屏：数据指针清0，所有显示清0
  83              delay(1000);                //延时大约 1s 后重新开始
  84          }
  85          
  86          /*LCD初始化*/
  87          void lcd_init()
  88          {
  89   1        le=0;
  90   1        wr_cmd(0x38);             //显示模式设置：16×2显示，5×7点阵，8位数据口
  91   1        wr_cmd(0x0c);             //开显示，显示光标，光标闪烁；bit2对应显示，bit1对应光标，bit0对应光标闪烁
  92   1        wr_cmd(0x06);             //写一个字符后地址指针+1；bit1=1 指针+1，bit1=0 指针-1；bit0=1整屏移动……
  93   1        wr_cmd(0x01);             //显示清屏：数据指针清0，所有显示清0  02H：数据指针清0
  94   1        wr_cmd(0x80);             //第一行地址指针设置
  95   1      }
  96          
  97          /*液晶状态查询*/
  98          void status()           // status 函数可能出了问题，没有使用
  99          {
 100   1        uchar sta;
 101   1        P2=0xff;              //读外部状态前 P0 先置高电平
 102   1        rs=0;
 103   1        rw=1;
 104   1        do                //当 P0 有多个中断使用时，读完状态后应置 le=0
 105   1        {
 106   2          le=1;
 107   2          delay(1);
 108   2          sta=P2;
 109   2        }while(sta&0x80);
 110   1        le=0;
 111   1      }
 112          
 113          /*写指令*/
 114          void wr_cmd(uchar cmd)
 115          {
 116   1      //  status();
C51 COMPILER V9.60.0.0   LCD_12864                                                         10/20/2021 22:18:10 PAGE 3   

 117   1        rs=0;
 118   1        rw=0;
 119   1        le=0; 
 120   1        P2=cmd;
 121   1        delay(1);             // 稍作延时待数据稳定
 122   1        le=1;                 // le 0-1-0,高脉冲
 123   1      //  delay(1);
 124   1        le=0;
 125   1      }
 126          
 127          /*写数据*/
 128          void wr_data(uchar dat)
 129          {
 130   1      //  status();
 131   1        rs=1;
 132   1        rw=0;
 133   1        le=0;
 134   1        P2=dat;
 135   1        delay(1);
 136   1        le=1;
 137   1      //  delay(1);
 138   1        le=0;
 139   1      }
 140          
 141          void delay(uint x_ms)
 142          {
 143   1        uint i,j;
 144   1        for(i=x_ms;i>0;i--)
 145   1          for(j=113;j>0;j--);
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    108    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
